# **what?** - This workflow builds python packages and ensures they can be
# installed on support OS and python versions. This workflow should not require
# any secrets.
# **why?** - Ensure that dbt and its dependencies are able to be packaged
# and installed.
# **when?** - This will run when pushing to protected branches, pull requests,
# and manual dispatch.

name: Build

on:
  push:
    branches:
      - "main"
      - "develop"
      - "*.latest"
      - "releases/*"
  workflow_dispatch:
  pull_request:

concurrency:
  group: build-${{ github.event_name }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  build:
    name: Build python
    runs-on: ubuntu-latest
    steps:
      - name: Check out the repository
        uses: actions/checkout@v2
        with:
          persist-credentials: false

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v2
        with:
          python-version: 3.8

      - name: Upgrade pip and setuptools
        run: |
          pip install --upgrade pip setuptools wheel
          pip --version

      - name: Build dist
        run: ./scripts/build-dist.sh

      - name: Show dists generated
        run: ls -lh dist/

      - uses: actions/upload-artifact@v2
        with:
          name: dist
          path: dist/

  install:
    name: Install ${{ matrix.python-version }} / ${{ matrix.os }}
    needs: build
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
        python-version: [3.6, 3.7, 3.8, 3.9]

    steps:
      - uses: actions/download-artifact@v2
        with:
          name: dist
          path: dist/

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}

      - name: Upgrade pip
        run: |
          pip install --upgrade pip
          pip --version

      - name: Install wheel dists
        shell: bash
        run: |
          find ./dist/*.whl -maxdepth 1 -type f | xargs pip install --force-reinstall --find-links=dist/

      - name: Check wheel dist
        run: |
          dbt --version

      - name: Install source dists
        shell: bash
        run: |
          find ./dist/*.gz -maxdepth 1 -type f | xargs pip install --force-reinstall --find-links=dist/

      - name: Check source dist
        run: |
          dbt --version
